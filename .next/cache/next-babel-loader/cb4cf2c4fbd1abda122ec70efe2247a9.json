{"ast":null,"code":"const express = require('express'),\n      passport = require('passport'),\n      FacebookStrategy = require('passport-facebook').Strategy,\n      session = require('express-session'),\n      cookieParser = require('cookie-parser'),\n      bodyParser = require('body-parser');\n\nconst GoogleStrategy = require('passport-google-oauth2').Strategy;\n\nconst next = require('next');\n\nconst port = parseInt(process.env.PORT, 10) || 3000;\nconst dev = true;\nconst app = next({\n  dev\n});\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n})); // Passport session setup.\n\npassport.serializeUser(function (user, done) {\n  done(null, user);\n});\npassport.deserializeUser(function (obj, done) {\n  done(null, obj);\n}); // Use the FacebookStrategy within Passport.\n\npassport.use(new FacebookStrategy({\n  clientID: '2264027293896025',\n  clientSecret: '5c231ad93ca6151bb56d1ba97138c882',\n  callbackURL: 'http://localhost:3000/auth/facebook/callback',\n  profileFields: ['id', 'email', 'displayName']\n}, function (accessToken, refreshToken, profile, done) {\n  process.nextTick(function () {\n    //Check whether the User exists or not using profile.id  \n    console.log(profile.id);\n    console.log(profile.displayName);\n    console.log(profile.emails[0].value);\n    return done(null, profile);\n  });\n}));\npassport.use(new GoogleStrategy({\n  clientID: \"15625499876-fpnmi7emctu164oed213atj3hunaae2h.apps.googleusercontent.com\",\n  clientSecret: \"ubhRFrrv8iDNo6XIIn82so1X\",\n  callbackURL: \"http://localhost:3000/auth/google/callback\",\n  passReqToCallback: true\n}, function (request, accessToken, refreshToken, profile, done) {\n  process.nextTick(function () {\n    //Check whether the User exists or not using profile.id\n    console.log(profile.id);\n    console.log(profile.displayName);\n    console.log(profile.email);\n    return done(null, profile);\n  });\n}));\n\nfunction login() {\n  app.get('/auth/facebook', passport.authenticate('facebook', {\n    scope: 'public_profile,email,user_friends,user_posts'\n  }));\n  app.get('/auth/facebook/callback', passport.authenticate('facebook', {\n    successRedirect: 'http://localhost:3000',\n    failureRedirect: '/login'\n  }));\n  app.get('/auth/google', passport.authenticate('google', {\n    scope: ['https://www.googleapis.com/auth/plus.login', 'https://www.googleapis.com/auth/userinfo.email', 'https://www.googleapis.com/auth/userinfo.profile']\n  }));\n  app.get('/auth/google/callback', passport.authenticate('google', {\n    successRedirect: 'http://localhost:3000',\n    failureRedirect: '/login'\n  }));\n}","map":{"version":3,"sources":["C:/Users/Samee/Desktop/Portfolio/react-reserve-master/utils/social.js"],"names":["express","require","passport","FacebookStrategy","Strategy","session","cookieParser","bodyParser","GoogleStrategy","next","port","parseInt","process","env","PORT","dev","app","use","initialize","json","urlencoded","extended","serializeUser","user","done","deserializeUser","obj","clientID","clientSecret","callbackURL","profileFields","accessToken","refreshToken","profile","nextTick","console","log","id","displayName","emails","value","passReqToCallback","request","email","login","get","authenticate","scope","successRedirect","failureRedirect"],"mappings":"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","sourcesContent":["const express = require('express'),\r\n    passport = require('passport'),\r\n    FacebookStrategy = require('passport-facebook').Strategy,\r\n    session = require('express-session'),\r\n    cookieParser = require('cookie-parser'),\r\n    bodyParser = require('body-parser');\r\n    const GoogleStrategy = require('passport-google-oauth2').Strategy;\r\n\r\nconst next = require('next')\r\nconst port = parseInt(process.env.PORT, 10) || 3000\r\nconst dev = process.env.NODE_ENV !== 'production'\r\nconst app = next({ dev })\r\n\r\napp.use(passport.initialize());\r\n\r\napp.use(passport.session());\r\n\r\napp.use(bodyParser.json());\r\n\r\napp.use(bodyParser.urlencoded({\r\n    extended: true\r\n}));\r\n\r\n// Passport session setup.\r\npassport.serializeUser(function (user, done) {\r\n    done(null, user);\r\n});\r\n\r\npassport.deserializeUser(function (obj, done) {\r\n    done(null, obj);\r\n});\r\n\r\n// Use the FacebookStrategy within Passport.\r\npassport.use(new FacebookStrategy({\r\n    clientID: '2264027293896025',\r\n    clientSecret: '5c231ad93ca6151bb56d1ba97138c882',\r\n    callbackURL: 'http://localhost:3000/auth/facebook/callback',\r\n    profileFields: ['id', 'email', 'displayName']\r\n},\r\n    function (accessToken, refreshToken, profile, done) {\r\n        process.nextTick(function () {\r\n            //Check whether the User exists or not using profile.id  \r\n            console.log(profile.id);\r\n            console.log(profile.displayName);\r\n            console.log(profile.emails[0].value);\r\n            return done(null, profile);\r\n        });\r\n    }\r\n));\r\n\r\n\r\npassport.use(new GoogleStrategy({\r\n    clientID: \"15625499876-fpnmi7emctu164oed213atj3hunaae2h.apps.googleusercontent.com\",\r\n    clientSecret: \"ubhRFrrv8iDNo6XIIn82so1X\",\r\n    callbackURL: \"http://localhost:3000/auth/google/callback\",\r\n    passReqToCallback: true\r\n},\r\n    function (request, accessToken, refreshToken, profile, done) {\r\n        process.nextTick(function () {\r\n            //Check whether the User exists or not using profile.id\r\n            console.log(profile.id);\r\n            console.log(profile.displayName);\r\n            console.log(profile.email);\r\n            return done(null, profile);\r\n        });\r\n    }\r\n));\r\n\r\n\r\nfunction login() {\r\n\r\n    app.get('/auth/facebook',\r\n        passport.authenticate('facebook', {\r\n            scope: 'public_profile,email,user_friends,user_posts'\r\n        })\r\n    );\r\n\r\n    app.get('/auth/facebook/callback',\r\n        passport.authenticate('facebook', {\r\n            successRedirect: 'http://localhost:3000',\r\n            failureRedirect: '/login'\r\n        })\r\n    );\r\n\r\n\r\n    app.get('/auth/google',\r\n        passport.authenticate('google', {\r\n            scope:\r\n                ['https://www.googleapis.com/auth/plus.login',\r\n                    'https://www.googleapis.com/auth/userinfo.email',\r\n                    'https://www.googleapis.com/auth/userinfo.profile']\r\n        })\r\n    );\r\n\r\n    app.get('/auth/google/callback',\r\n        passport.authenticate('google', {\r\n            successRedirect: 'http://localhost:3000',\r\n            failureRedirect: '/login'\r\n        })\r\n    );\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"script"}