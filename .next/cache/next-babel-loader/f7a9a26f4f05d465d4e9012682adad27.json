{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Samee\\\\Desktop\\\\Portfolio\\\\react-reserve-master\\\\components\\\\Form\\\\PersonForm.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Divider, Layout, Alert, Row, Col, Button } from 'antd';\nconst {\n  Content\n} = Layout;\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 23\n    },\n    sm: {\n      span: 4\n    }\n  }\n};\nconst INITIAL_PERSON = {\n  key: \"\",\n  name: \"\",\n  phone: \"\",\n  address: \"\",\n  cnic: \"\"\n};\n\nfunction PersonForm(props) {\n  const {\n    0: error,\n    1: setError\n  } = useState(\"\");\n  const {\n    0: person,\n    1: setPerson\n  } = useState(INITIAL_PERSON);\n  const {\n    0: success,\n    1: setSuccess\n  } = useState(false);\n  const {\n    0: disable,\n    1: setDisable\n  } = useState(false); // React.useEffect(() => {\n  //     console.log(person);\n  // }, [person])\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setPerson(_objectSpread(_objectSpread({}, person), {}, {\n      [name]: value\n    }));\n  }\n\n  function handleFinish(id) {\n    setSuccess(true);\n    setDisable(true);\n    person.key = id;\n    props.getData(person);\n  }\n\n  let message = null;\n\n  if (error.length > 0) {\n    message = __jsx(Alert, {\n      message: error,\n      type: \"error\",\n      showIcon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 19\n      }\n    });\n  } else if (success) {\n    message = __jsx(Alert, {\n      message: \"Person Data Saved\",\n      type: \"success\",\n      showIcon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    className: \"infoform-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, __jsx(Content, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"site-layout-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \" For Person \", props.Number + 1, \" \"), message, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }), __jsx(Form, _extends({\n    onFinish: () => handleFinish(props.Number)\n  }, formItemLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }\n  }, __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Item, {\n    name: \"name\",\n    label: \"Name\",\n    rules: [{\n      required: true,\n      message: 'Please Enter Your Name!'\n    }],\n    className: \"infoform-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    name: \"name\",\n    size: \"large\",\n    placeholder: \"Name\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }))), __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Item, {\n    name: \"phone\",\n    label: \"Phone\",\n    rules: [{\n      required: true,\n      message: 'Please Enter Your Phone!'\n    }],\n    className: \"infoform-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    name: \"phone\",\n    size: \"large\",\n    placeholder: \"Phone\",\n    onChange: handleChange,\n    type: \"number\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 37\n    }\n  })))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 25\n    }\n  }, __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Item, {\n    name: \"address\",\n    label: \"Address\",\n    rules: [{\n      required: true,\n      message: 'Please Enter Your Address!'\n    }],\n    className: \"infoform-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    name: \"address\",\n    size: \"large\",\n    placeholder: \"Address\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }))), __jsx(Col, {\n    span: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Item, {\n    name: \"cnic\",\n    label: \"CNIC\",\n    rules: [{\n      required: true,\n      message: 'Please Enter Your CNIC!'\n    }],\n    className: \"infoform-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }, __jsx(Input, {\n    name: \"cnic\",\n    size: \"large\",\n    placeholder: \"CNIC\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  })))), __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, __jsx(Col, {\n    span: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }), __jsx(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    size: \"large\",\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 37\n    }\n  }, \"Save\")))))))));\n}\n\nexport default PersonForm;","map":{"version":3,"sources":["C:/Users/Samee/Desktop/Portfolio/react-reserve-master/components/Form/PersonForm.js"],"names":["React","useState","Form","Input","Divider","Layout","Alert","Row","Col","Button","Content","formItemLayout","labelCol","xs","span","sm","INITIAL_PERSON","key","name","phone","address","cnic","PersonForm","props","error","setError","person","setPerson","success","setSuccess","disable","setDisable","handleChange","event","value","target","handleFinish","id","getData","message","length","Number","required"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Input, Divider, Layout, Alert, Row, Col, Button } from 'antd';\r\nconst { Content } = Layout;\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 23,\r\n        },\r\n        sm: {\r\n            span: 4,\r\n        },\r\n    }\r\n};\r\n\r\nconst INITIAL_PERSON = {\r\n    key: \"\",\r\n    name: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    cnic: \"\"\r\n};\r\n\r\nfunction PersonForm(props) {\r\n\r\n    const [error, setError] = useState(\"\");\r\n    const [person, setPerson] = useState(INITIAL_PERSON);\r\n    const [success, setSuccess] = useState(false);\r\n    const [disable, setDisable] = useState(false);\r\n\r\n    // React.useEffect(() => {\r\n    //     console.log(person);\r\n    // }, [person])\r\n\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n        setPerson({ ...person, [name]: value });\r\n    }\r\n\r\n\r\n    function handleFinish(id) {\r\n        setSuccess(true);\r\n        setDisable(true);\r\n        person.key = id;\r\n        props.getData(person);\r\n\r\n\r\n    }\r\n\r\n\r\n    let message = null;\r\n    if (error.length > 0) {\r\n        message = <Alert message={error} type=\"error\" showIcon />\r\n    }\r\n    else if (success){\r\n        message = <Alert message=\"Person Data Saved\" type=\"success\" showIcon />\r\n    }\r\n\r\n\r\n    \r\n\r\n    return <>\r\n        <Layout className=\"infoform-layout\">\r\n            <Content className=\"content\" >\r\n                <div className=\"site-layout-background\">\r\n                    <h1> For Person {props.Number + 1} </h1>\r\n                    {message}\r\n                    <Divider />\r\n                    <Form onFinish={() => handleFinish(props.Number)} {...formItemLayout}>\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Form.Item name=\"name\" label=\"Name\" rules={[{ required: true, message: 'Please Enter Your Name!' }]} className=\"infoform-input\">\r\n                                    <Input\r\n                                        name=\"name\"\r\n                                        size=\"large\"\r\n                                        placeholder=\"Name\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item name=\"phone\" label=\"Phone\" rules={[{ required: true, message: 'Please Enter Your Phone!' }]} className=\"infoform-input\">\r\n                                    <Input\r\n                                        name=\"phone\"\r\n                                        size=\"large\"\r\n                                        placeholder=\"Phone\"\r\n                                        onChange={handleChange}\r\n                                        type=\"number\"\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n\r\n\r\n                        <Row>\r\n                            <Col span={12}>\r\n                                <Form.Item name=\"address\" label=\"Address\" rules={[{ required: true, message: 'Please Enter Your Address!' }]} className=\"infoform-input\">\r\n                                    <Input\r\n                                        name=\"address\"\r\n                                        size=\"large\"\r\n                                        placeholder=\"Address\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                            <Col span={12}>\r\n                                <Form.Item name=\"cnic\" label=\"CNIC\" rules={[{ required: true, message: 'Please Enter Your CNIC!' }]} className=\"infoform-input\">\r\n                                    <Input\r\n                                        name=\"cnic\"\r\n                                        size=\"large\"\r\n                                        placeholder=\"CNIC\"\r\n                                        onChange={handleChange}\r\n                                    />\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                        <Divider />\r\n                        <Row>\r\n                            <Col span={16}></Col>\r\n                            <Col span={8}>\r\n                                <Form.Item >\r\n                                    <Button type=\"primary\" htmlType=\"submit\" size=\"large\" disabled={disable}>\r\n                                        Save\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </Content>\r\n        </Layout>\r\n    </>\r\n\r\n}\r\n\r\nexport default PersonForm;\r\n"]},"metadata":{},"sourceType":"module"}