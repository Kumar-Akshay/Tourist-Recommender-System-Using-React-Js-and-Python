{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samee\\\\Desktop\\\\Portfolio\\\\react-reserve-master\\\\pages\\\\infoform.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { Form, Divider, Select, Layout, Alert, DatePicker, Row, Col, Button } from 'antd';\nimport axios from \"axios\";\nimport catchErrors from \"../utils/catchErrors\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { handleLogin } from \"../utils/auth\";\nimport PersonForm from '../components/Form/PersonForm';\nvar Content = Layout.Content;\nvar Option = Select.Option;\nvar GENRAL_DATA = {\n  location: \"\",\n  interest: \"\",\n  genre: \"\"\n};\nvar formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 26\n    },\n    sm: {\n      span: 5\n    }\n  }\n};\n\nfunction Infoform() {\n  _s();\n\n  var _useState = useState(GENRAL_DATA),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  var _useState3 = useState([]),\n      personList = _useState3[0],\n      setPersonList = _useState3[1];\n\n  var _useState4 = useState(2),\n      NoOfPerson = _useState4[0],\n      setNoOfPerson = _useState4[1];\n\n  function getpersondata(person) {\n    var previousdata = [_objectSpread({}, personList)];\n    var updateddata = previousdata.filter(function (value) {\n      return JSON.stringify(value) !== '{}';\n    });\n    updateddata.push(person); // console.log(updateddata);\n    // setPersonList({personList = updateddata});\n    //    console.log(personList);\n  }\n\n  function handleDate(date, dateString) {\n    console.log(date, dateString);\n  }\n\n  function handleSelect(value, option) {\n    var key = option.key;\n    var res = key.split(\"-\");\n    var id = res[0];\n    setData(_objectSpread(_objectSpread({}, data), {}, _defineProperty({}, id, value))); // if (name === 'person') {\n    //     setNoOfPerson(value);\n    //     console.log(NoOfPerson)\n    // }\n    //  console.log(id);\n\n    console.log(key);\n    console.log(value);\n    console.log(id);\n  }\n\n  function handleFinish() {}\n\n  var errrors = null;\n\n  if (error.length > 0) {\n    errrors = __jsx(Alert, {\n      message: error,\n      type: \"error\",\n      showIcon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 19\n      }\n    });\n  } // let personForm = null;\n  // personForm = personList.map((person, index) => {\n  //     return <PersonForm Number={index} person={person} key={index} getData={() => getpersondata(person)} />\n  // });\n\n\n  var personForm = [];\n\n  for (var i = 0; i < NoOfPerson; i++) {\n    personForm.push(__jsx(PersonForm, {\n      Number: i,\n      getData: getpersondata,\n      key: i,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }));\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    className: \"infoform-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(Content, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"site-layout-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \" Fill The Form \"), errrors, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  }), __jsx(Form, _extends({\n    onFinish: handleFinish\n  }, formItemLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Item, {\n    label: \"Current Location\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select Current Location!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 37\n    }\n  }, __jsx(Select, {\n    placeholder: \"Please select Current Location\",\n    size: \"large\",\n    onChange: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 41\n    }\n  }, __jsx(Option, {\n    key: \"location-0\",\n    value: \"Islamabad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 45\n    }\n  }, \"Islamabad\"), __jsx(Option, {\n    key: \"location-1\",\n    value: \"Lahore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 45\n    }\n  }, \"Lahore\"))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Item, {\n    label: \"Select Interest\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select Interest!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 37\n    }\n  }, __jsx(Select, {\n    placeholder: \"Please select Interest\",\n    size: \"large\",\n    onChange: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 41\n    }\n  }, __jsx(Option, {\n    key: \"interest-0\",\n    value: \"Romantic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 45\n    }\n  }, \"Romantic\"), __jsx(Option, {\n    key: \"interest-1\",\n    value: \"Historical\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 45\n    }\n  }, \"Historical\"), __jsx(Option, {\n    key: \"interest-2\",\n    value: \"Adventure\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 45\n    }\n  }, \"Adventure\"), __jsx(Option, {\n    key: \"interest-3\",\n    value: \"Cultural\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 45\n    }\n  }, \"Cultural\"))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Item, {\n    label: \"Select Genre\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select Genre!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 37\n    }\n  }, __jsx(Select, {\n    placeholder: \"Please select Genre\",\n    size: \"large\",\n    onChange: handleSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 41\n    }\n  }, __jsx(Option, {\n    key: \"genre-0\",\n    value: \"XXXX\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 45\n    }\n  }, \"XXXX\"), __jsx(Option, {\n    key: \"genre-1\",\n    value: \"YYYY\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 45\n    }\n  }, \"YYYYY\"))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Item, {\n    label: \"Number of Person\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select Number of Person!'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 37\n    }\n  }, __jsx(Select, {\n    placeholder: \"No of Person\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 41\n    }\n  }, __jsx(Option, {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 45\n    }\n  }, \"2\"), __jsx(Option, {\n    value: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 45\n    }\n  }, \"3\"), __jsx(Option, {\n    value: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 45\n    }\n  }, \"4\"), __jsx(Option, {\n    value: \"5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 45\n    }\n  }, \"5\"))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Item, {\n    name: \"date\",\n    label: \"Select Date\",\n    hasFeedback: true,\n    rules: [{\n      required: true,\n      message: 'Please select Date'\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 37\n    }\n  }, __jsx(DatePicker, {\n    name: \"date\",\n    onChange: handleDate,\n    size: \"large\",\n    placeholder: \"Please select Date\",\n    className: \"infoform-date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 41\n    }\n  })))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 37\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 41\n    }\n  }, \"Submit\")))))))), personForm, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(Infoform, \"STJ/4oNABnxnuck0QqlltA/DNAI=\");\n\n_c = Infoform;\nexport default Infoform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Infoform\");","map":{"version":3,"sources":["C:/Users/Samee/Desktop/Portfolio/react-reserve-master/pages/infoform.js"],"names":["React","useState","Form","Divider","Select","Layout","Alert","DatePicker","Row","Col","Button","axios","catchErrors","baseUrl","handleLogin","PersonForm","Content","Option","GENRAL_DATA","location","interest","genre","formItemLayout","labelCol","xs","span","sm","Infoform","data","setData","error","setError","personList","setPersonList","NoOfPerson","setNoOfPerson","getpersondata","person","previousdata","updateddata","filter","value","JSON","stringify","push","handleDate","date","dateString","console","log","handleSelect","option","key","res","split","id","handleFinish","errrors","length","personForm","i","required","message"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,KAAxC,EAA+CC,UAA/C,EAA2DC,GAA3D,EAAgEC,GAAhE,EAAqEC,MAArE,QAAmF,MAAnF;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAOC,UAAP,MAAuB,+BAAvB;IAEQC,O,GAAYX,M,CAAZW,O;IACAC,M,GAAWb,M,CAAXa,M;AAER,IAAMC,WAAW,GAAG;AAChBC,EAAAA,QAAQ,EAAE,EADM;AAEhBC,EAAAA,QAAQ,EAAE,EAFM;AAGhBC,EAAAA,KAAK,EAAE;AAHS,CAApB;AAMA,IAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,EAAE,EAAE;AACAC,MAAAA,IAAI,EAAE;AADN,KADE;AAINC,IAAAA,EAAE,EAAE;AACAD,MAAAA,IAAI,EAAE;AADN;AAJE;AADS,CAAvB;;AAWA,SAASE,QAAT,GAAoB;AAAA;;AAAA,kBAEQ1B,QAAQ,CAACiB,WAAD,CAFhB;AAAA,MAETU,IAFS;AAAA,MAEHC,OAFG;;AAAA,mBAGU5B,QAAQ,CAAC,EAAD,CAHlB;AAAA,MAGT6B,KAHS;AAAA,MAGFC,QAHE;;AAAA,mBAIoB9B,QAAQ,CAAC,EAAD,CAJ5B;AAAA,MAIT+B,UAJS;AAAA,MAIGC,aAJH;;AAAA,mBAKoBhC,QAAQ,CAAC,CAAD,CAL5B;AAAA,MAKTiC,UALS;AAAA,MAKGC,aALH;;AAOhB,WAASC,aAAT,CAAuBC,MAAvB,EAA+B;AAC3B,QAAIC,YAAY,GAAG,mBAAMN,UAAN,EAAnB;AACA,QAAIO,WAAW,GAAGD,YAAY,CAACE,MAAb,CAAoB,UAAAC,KAAK;AAAA,aAAIC,IAAI,CAACC,SAAL,CAAeF,KAAf,MAA0B,IAA9B;AAAA,KAAzB,CAAlB;AACAF,IAAAA,WAAW,CAACK,IAAZ,CAAiBP,MAAjB,EAH2B,CAI3B;AACA;AACA;AACH;;AAGD,WAASQ,UAAT,CAAoBC,IAApB,EAA0BC,UAA1B,EAAsC;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,UAAlB;AACH;;AAED,WAASG,YAAT,CAAsBT,KAAtB,EAA6BU,MAA7B,EAAqC;AAEjC,QAAMC,GAAG,GAAID,MAAM,CAACC,GAApB;AACA,QAAIC,GAAG,GAAGD,GAAG,CAACE,KAAJ,CAAU,GAAV,CAAV;AACA,QAAMC,EAAE,GAAGF,GAAG,CAAC,CAAD,CAAd;AAEAxB,IAAAA,OAAO,iCAAMD,IAAN,2BAAa2B,EAAb,EAAkBd,KAAlB,GAAP,CANiC,CAQjC;AACA;AACA;AACA;AACF;;AACEO,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAYR,KAAZ;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYM,EAAZ;AAEH;;AAED,WAASC,YAAT,GAAwB,CAEvB;;AAED,MAAIC,OAAO,GAAG,IAAd;;AACA,MAAI3B,KAAK,CAAC4B,MAAN,GAAe,CAAnB,EAAsB;AAClBD,IAAAA,OAAO,GAAG,MAAC,KAAD;AAAO,MAAA,OAAO,EAAE3B,KAAhB;AAAuB,MAAA,IAAI,EAAC,OAA5B;AAAoC,MAAA,QAAQ,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAV;AACH,GA/Ce,CAkDhB;AACA;AACA;AACA;;;AAEA,MAAI6B,UAAU,GAAG,EAAjB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG1B,UAApB,EAAgC0B,CAAC,EAAjC,EAAqC;AACjCD,IAAAA,UAAU,CAACf,IAAX,CAAgB,MAAC,UAAD;AAAY,MAAA,MAAM,EAAEgB,CAApB;AAAuB,MAAA,OAAO,EAAExB,aAAhC;AAA+C,MAAA,GAAG,EAAEwB,CAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB;AACH;;AAGD,SACI,4BACI,MAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,OAAD;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEKH,OAFL,EAII,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,MAAC,IAAD;AAAM,IAAA,QAAQ,EAAED;AAAhB,KAAkClC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAEI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,KAAK,EAAC,kBADV;AAEI,IAAA,WAAW,MAFf;AAGI,IAAA,KAAK,EAAE,CAAC;AAAEuC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,gCAApB;AAAqD,IAAA,IAAI,EAAC,OAA1D;AAAkE,IAAA,QAAQ,EAAEZ,YAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,YAAZ;AAAyB,IAAA,KAAK,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,YAAZ;AAAyB,IAAA,KAAK,EAAC,QAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAJJ,CADJ,CADJ,CAFJ,EAeI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,KAAK,EAAC,iBADV;AAEI,IAAA,WAAW,MAFf;AAGI,IAAA,KAAK,EAAE,CAAC;AAAEW,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,wBAApB;AAA6C,IAAA,IAAI,EAAC,OAAlD;AAA0D,IAAA,QAAQ,EAAEZ,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,YAAZ;AAAyB,IAAA,KAAK,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,YAAZ;AAAyB,IAAA,KAAK,EAAC,YAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAGI,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,YAAZ;AAAyB,IAAA,KAAK,EAAC,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,YAAZ;AAAyB,IAAA,KAAK,EAAC,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CAJJ,CADJ,CADJ,CAfJ,EA8BI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,KAAK,EAAC,cADV;AAEI,IAAA,WAAW,MAFf;AAGI,IAAA,KAAK,EAAE,CAAC;AAAEW,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,qBAApB;AAA0C,IAAA,IAAI,EAAC,OAA/C;AAAuD,IAAA,QAAQ,EAAEZ,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,GAAG,EAAC,SAAZ;AAAsB,IAAA,KAAK,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFJ,CAJJ,CADJ,CADJ,CA9BJ,EA6CI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,KAAK,EAAC,kBADV;AAEI,IAAA,WAAW,MAFf;AAGI,IAAA,KAAK,EAAE,CAAC;AAAEW,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,MAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,cAApB;AAAmC,IAAA,IAAI,EAAC,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ,EAEI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFJ,EAGI,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,EAII,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJJ,CAJJ,CADJ,CADJ,CA7CJ,EA6DI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,KAAK,EAAC,aAFV;AAGI,IAAA,WAAW,MAHf;AAII,IAAA,KAAK,EAAE,CAAC;AAAED,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAD,CAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,MAAC,UAAD;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,QAAQ,EAAEjB,UAAlC;AAA8C,IAAA,IAAI,EAAC,OAAnD;AAA2D,IAAA,WAAW,EAAC,oBAAvE;AAA4F,IAAA,SAAS,EAAC,eAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ,CA7DJ,EA0EI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAK,IAAA,IAAI,EAAE,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,QAAQ,EAAC,QAAhC;AAAyC,IAAA,IAAI,EAAC,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,CADJ,CA1EJ,CALJ,CADJ,CADJ,CADJ,EAiGKc,UAjGL,EAmGI,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnGJ,CADJ;AAuGH;;GApKQhC,Q;;KAAAA,Q;AAsKT,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Divider, Select, Layout, Alert, DatePicker, Row, Col, Button } from 'antd';\r\nimport axios from \"axios\";\r\nimport catchErrors from \"../utils/catchErrors\";\r\nimport baseUrl from \"../utils/baseUrl\";\r\nimport { handleLogin } from \"../utils/auth\";\r\nimport PersonForm from '../components/Form/PersonForm'\r\n\r\nconst { Content } = Layout;\r\nconst { Option } = Select;\r\n\r\nconst GENRAL_DATA = {\r\n    location: \"\",\r\n    interest: \"\",\r\n    genre: \"\",\r\n};\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 26,\r\n        },\r\n        sm: {\r\n            span: 5,\r\n        },\r\n    }\r\n};\r\n\r\nfunction Infoform() {\r\n\r\n    const [data, setData] = useState(GENRAL_DATA);\r\n    const [error, setError] = useState(\"\");\r\n    const [personList, setPersonList] = useState([]);\r\n    const [NoOfPerson, setNoOfPerson] = useState(2);\r\n\r\n    function getpersondata(person) {\r\n        let previousdata = [{ ...personList }];\r\n        var updateddata = previousdata.filter(value => JSON.stringify(value) !== '{}');\r\n        updateddata.push(person);\r\n        // console.log(updateddata);\r\n        // setPersonList({personList = updateddata});\r\n        //    console.log(personList);\r\n    }\r\n\r\n\r\n    function handleDate(date, dateString) {\r\n        console.log(date, dateString);\r\n    }\r\n\r\n    function handleSelect(value, option) {\r\n\r\n        const key  = option.key;\r\n        let res = key.split(\"-\");\r\n        const id = res[0];\r\n        \r\n        setData({ ...data, [id]: value });\r\n\r\n        // if (name === 'person') {\r\n        //     setNoOfPerson(value);\r\n        //     console.log(NoOfPerson)\r\n        // }\r\n      //  console.log(id);\r\n        console.log(key)\r\n        console.log(value)\r\n        console.log(id)\r\n\r\n    }\r\n\r\n    function handleFinish() {\r\n\r\n    }\r\n\r\n    let errrors = null;\r\n    if (error.length > 0) {\r\n        errrors = <Alert message={error} type=\"error\" showIcon />\r\n    }\r\n\r\n\r\n    // let personForm = null;\r\n    // personForm = personList.map((person, index) => {\r\n    //     return <PersonForm Number={index} person={person} key={index} getData={() => getpersondata(person)} />\r\n    // });\r\n\r\n    let personForm = [];\r\n    for (var i = 0; i < NoOfPerson; i++) {\r\n        personForm.push(<PersonForm Number={i} getData={getpersondata} key={i} />)\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout className=\"infoform-layout\">\r\n                <Content className=\"content\" >\r\n                    <div className=\"site-layout-background\">\r\n                        <h1> Fill The Form </h1>\r\n                        {errrors}\r\n\r\n                        <Divider />\r\n                        <Form onFinish={handleFinish} {...formItemLayout}>\r\n\r\n                            <Row>\r\n                                <Col span={24} >\r\n                                    <Form.Item\r\n                                        label=\"Current Location\"\r\n                                        hasFeedback\r\n                                        rules={[{ required: true, message: 'Please select Current Location!' }]}>\r\n                                        <Select placeholder=\"Please select Current Location\" size=\"large\" onChange={handleSelect} >\r\n                                            <Option key=\"location-0\" value=\"Islamabad\">Islamabad</Option>\r\n                                            <Option key=\"location-1\" value=\"Lahore\">Lahore</Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form.Item\r\n                                        label=\"Select Interest\"\r\n                                        hasFeedback\r\n                                        rules={[{ required: true, message: 'Please select Interest!' }]}>\r\n                                        <Select placeholder=\"Please select Interest\" size=\"large\" onChange={handleSelect} >\r\n                                            <Option key=\"interest-0\" value=\"Romantic\">Romantic</Option>\r\n                                            <Option key=\"interest-1\" value=\"Historical\">Historical</Option>\r\n                                            <Option key=\"interest-2\" value=\"Adventure\">Adventure</Option>\r\n                                            <Option key=\"interest-3\" value=\"Cultural\">Cultural</Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form.Item\r\n                                        label=\"Select Genre\"\r\n                                        hasFeedback\r\n                                        rules={[{ required: true, message: 'Please select Genre!' }]}>\r\n                                        <Select placeholder=\"Please select Genre\" size=\"large\" onChange={handleSelect} >\r\n                                            <Option key=\"genre-0\" value=\"XXXX\">XXXX</Option>\r\n                                            <Option key=\"genre-1\" value=\"YYYY\">YYYYY</Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form.Item\r\n                                        label=\"Number of Person\"\r\n                                        hasFeedback\r\n                                        rules={[{ required: true, message: 'Please select Number of Person!' }]}>\r\n                                        <Select placeholder=\"No of Person\" size=\"large\">\r\n                                            <Option value=\"2\">2</Option>\r\n                                            <Option value=\"3\">3</Option>\r\n                                            <Option value=\"4\">4</Option>\r\n                                            <Option value=\"5\">5</Option>\r\n                                        </Select>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form.Item\r\n                                        name=\"date\"\r\n                                        label=\"Select Date\"\r\n                                        hasFeedback\r\n                                        rules={[{ required: true, message: 'Please select Date' }]}>\r\n                                        <DatePicker name=\"date\" onChange={handleDate} size=\"large\" placeholder=\"Please select Date\" className=\"infoform-date\"/>\r\n                                    </Form.Item>\r\n\r\n                                </Col>\r\n                            </Row>\r\n\r\n                            <Row>\r\n                                <Col span={24}>\r\n                                    <Form.Item >\r\n                                        <Button type=\"primary\" htmlType=\"submit\" size=\"large\" >\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Form.Item>\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n\r\n            {personForm}\r\n\r\n            <Divider />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Infoform;\r\n"]},"metadata":{},"sourceType":"module"}