{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { Form, Input, Button, Divider, Layout, Alert } from 'antd';\nimport { UserOutlined, LockOutlined, FacebookFilled, GooglePlusSquareFilled } from '@ant-design/icons';\nimport Link from \"next/link\";\nimport axios from \"axios\";\nimport catchErrors from \"../utils/catchErrors\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { handleLogin } from \"../utils/auth\";\nvar Content = Layout.Content;\nvar INITIAL_USER = {\n  email: \"\",\n  password: \"\"\n};\n\nfunction Login() {\n  var _useState = useState(INITIAL_USER),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  React.useEffect(function () {\n    setTimeout(function () {\n      setError(\"\");\n    }, 5000);\n  }, [user]);\n\n  function handleChange(event) {\n    var _event$target = event.target,\n        name = _event$target.name,\n        value = _event$target.value;\n    setUser(_objectSpread(_objectSpread({}, user), {}, _defineProperty({}, name, value)));\n  }\n\n  function handleFinish() {\n    return _handleFinish.apply(this, arguments);\n  }\n\n  function _handleFinish() {\n    _handleFinish = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, payload, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              url = \"\".concat(baseUrl, \"/api/login\");\n              payload = _objectSpread({}, user);\n              _context.next = 5;\n              return axios.post(url, payload);\n\n            case 5:\n              response = _context.sent;\n              console.log(response);\n              handleLogin(response.data);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              catchErrors(_context.t0, setError);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n    return _handleFinish.apply(this, arguments);\n  }\n\n  function handlegoogle(event) {\n    event.preventDefault();\n    console.log('http://localhost:3000/auth/google');\n    window.location.replace(\"http://localhost:3000/auth/google\");\n  }\n\n  function handlefacebook(event) {\n    event.preventDefault();\n    console.log('http://localhost:3000/auth/facebook');\n    window.location.replace(\"http://localhost:3000/auth/facebook\");\n  }\n\n  var errrors = null; // if (error.length > 0) {\n  //   console.log(\"Size greater then 1\");\n  //   errrors =\n  //     <div>\n  //       {error.map((err, index) => {\n  //         return <> <Alert message={err} type=\"error\" showIcon key={index} />  <br /> </>\n  //       })}\n  //     </div>\n  // }\n\n  if (error.length > 0) {\n    errrors = __jsx(Alert, {\n      message: error,\n      type: \"error\",\n      showIcon: true\n    });\n  }\n\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    className: \"layout\"\n  }, __jsx(Content, {\n    className: \"content\"\n  }, __jsx(\"div\", {\n    className: \"site-layout-background\"\n  }, __jsx(\"h1\", null, \" Login \"), errrors, __jsx(Divider, null), __jsx(Form, {\n    onFinish: handleFinish\n  }, __jsx(Form.Item, {\n    name: \"username\",\n    rules: [{\n      required: true,\n      message: 'Please input your Email!'\n    }]\n  }, __jsx(Input, {\n    name: \"email\",\n    className: \"input\",\n    size: \"large\",\n    prefix: __jsx(UserOutlined, null),\n    placeholder: \"Username\",\n    onChange: handleChange,\n    type: \"email\"\n  })), __jsx(Form.Item, {\n    name: \"password\",\n    rules: [{\n      required: true,\n      message: 'Please input your Password!'\n    }]\n  }, __jsx(Input, {\n    name: \"password\",\n    className: \"input\",\n    size: \"large\",\n    prefix: __jsx(LockOutlined, null),\n    type: \"password\",\n    placeholder: \"Password\",\n    onChange: handleChange\n  })), __jsx(Form.Item, null, __jsx(Link, {\n    href: \"\"\n  }, __jsx(\"a\", null, \"Forgot password\"))), __jsx(Form.Item, null, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    shape: \"round\",\n    size: \"large\"\n  }, \"Log in\"))), __jsx(Button, {\n    shape: \"round\",\n    icon: __jsx(FacebookFilled, null),\n    size: \"large\",\n    onClick: handlegoogle\n  }, \"Sign in with Facebook\"), __jsx(Divider, {\n    style: {\n      margin: \"2px\"\n    }\n  }), __jsx(Button, {\n    shape: \"round\",\n    icon: __jsx(GooglePlusSquareFilled, null),\n    size: \"large\",\n    onClick: handlefacebook\n  }, \"Sign in with Google\")))));\n}\n\nexport default Login;","map":null,"metadata":{},"sourceType":"module"}