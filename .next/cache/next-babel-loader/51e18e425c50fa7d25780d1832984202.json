{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport mongoose from 'mongoose';\nvar connection = {};\n\nfunction connectDb() {\n  return _connectDb.apply(this, arguments);\n}\n\nfunction _connectDb() {\n  _connectDb = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var db;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!connection.isConnected) {\n              _context.next = 3;\n              break;\n            }\n\n            console.log(\"Using Existing Connection\");\n            return _context.abrupt(\"return\");\n\n          case 3:\n            _context.next = 5;\n            return mongoose.connect(process.env.MONGO_SRV, {\n              useCreateIndex: true,\n              useFindAndModify: false,\n              useNewUrlParser: true,\n              useUnifiedTopology: true\n            });\n\n          case 5:\n            db = _context.sent;\n            console.log(\"Database Connected\");\n            connection.isConnected = db.connections[0].readyState;\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _connectDb.apply(this, arguments);\n}\n\nexport default connectDb;","map":{"version":3,"sources":["C:/Users/Samee/Desktop/Portfolio/react-reserve-master/utils/connectDb.js"],"names":["mongoose","connection","connectDb","isConnected","console","log","connect","process","env","MONGO_SRV","useCreateIndex","useFindAndModify","useNewUrlParser","useUnifiedTopology","db","connections","readyState"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEA,IAAMC,UAAU,GAAG,EAAnB;;SAEeC,S;;;;;wEAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEOD,UAAU,CAACE,WAFlB;AAAA;AAAA;AAAA;;AAGQC,YAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ;AAHR;;AAAA;AAAA;AAAA,mBAOoBL,QAAQ,CAACM,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAuC;AACpDC,cAAAA,cAAc,EAAC,IADqC;AAEpDC,cAAAA,gBAAgB,EAAC,KAFmC;AAGpDC,cAAAA,eAAe,EAAC,IAHoC;AAIpDC,cAAAA,kBAAkB,EAAC;AAJiC,aAAvC,CAPpB;;AAAA;AAOSC,YAAAA,EAPT;AAcGV,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAJ,YAAAA,UAAU,CAACE,WAAX,GAAyBW,EAAE,CAACC,WAAH,CAAe,CAAf,EAAkBC,UAA3C;;AAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAmBA,eAAed,SAAf","sourcesContent":["import mongoose from 'mongoose'\r\n\r\nconst connection = {}\r\n\r\nasync function connectDb(){\r\n\r\n    if(connection.isConnected){\r\n        console.log(\"Using Existing Connection\")\r\n      return\r\n    }\r\n\r\n   const db = await mongoose.connect(process.env.MONGO_SRV,{\r\n       useCreateIndex:true,\r\n       useFindAndModify:false,\r\n       useNewUrlParser:true,\r\n       useUnifiedTopology:true\r\n   })\r\n\r\n   console.log(\"Database Connected\")\r\n   connection.isConnected = db.connections[0].readyState;\r\n\r\n}\r\n\r\nexport default connectDb;"]},"metadata":{},"sourceType":"module"}