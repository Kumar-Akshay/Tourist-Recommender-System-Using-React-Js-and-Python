{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Samee\\\\Desktop\\\\Portfolio\\\\react-reserve-master\\\\pages\\\\infoform.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport { Form, Divider, Select, Layout, Alert, DatePicker, Row, Col } from 'antd';\nimport axios from \"axios\";\nimport catchErrors from \"../utils/catchErrors\";\nimport baseUrl from \"../utils/baseUrl\";\nimport { handleLogin } from \"../utils/auth\";\nimport PersonForm from '../components/Form/PersonForm';\nvar Content = Layout.Content;\nvar Option = Select.Option;\nvar GENRAL_DATA = {\n  location: \"\",\n  interest: \"\",\n  genre: \"\",\n  person: \"\"\n};\nvar INITIAL_PERSON = {\n  name: \"\",\n  phone: \"\",\n  address: \"\",\n  cnic: \"\"\n};\n\nfunction Infoform() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(GENRAL_DATA),\n      data = _useState[0],\n      setData = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      error = _useState2[0],\n      setError = _useState2[1]; // because two person are mandatory\n\n\n  var _useState3 = useState([INITIAL_PERSON, INITIAL_PERSON]),\n      personList = _useState3[0],\n      setPersonList = _useState3[1];\n\n  function getpersondata(person) {\n    var previousdata = [_objectSpread({}, personList)];\n    var updateddata = previousdata.push(person);\n    setPersonList(updateddata);\n    console.log(person);\n  }\n\n  function handleDate(date, dateString) {\n    console.log(date, dateString);\n  }\n\n  function handleSelect(event) {\n    var _event$target = event.target,\n        id = _event$target.id,\n        value = _event$target.value;\n    setData(_objectSpread(_objectSpread({}, data), {}, _defineProperty({}, name, value)));\n  }\n\n  function handleFinish() {\n    return _handleFinish.apply(this, arguments);\n  }\n\n  function _handleFinish() {\n    _handleFinish = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var url, payload, response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              url = \"\".concat(baseUrl, \"/api/\");\n              payload = _objectSpread({}, user);\n              _context.next = 5;\n              return axios.post(url, payload);\n\n            case 5:\n              response = _context.sent;\n              console.log(response);\n              handleLogin(response.data);\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              catchErrors(_context.t0, setError);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 10]]);\n    }));\n    return _handleFinish.apply(this, arguments);\n  }\n\n  var errrors = null;\n\n  if (error.length > 0) {\n    errrors = __jsx(Alert, {\n      message: error,\n      type: \"error\",\n      showIcon: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 19\n      }\n    });\n  }\n\n  var personForm = null;\n  personForm = personList.map(function (person, index) {\n    return __jsx(PersonForm, {\n      Number: index,\n      list: personList,\n      key: index,\n      getData: getpersondata(person),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }\n    });\n  });\n  return __jsx(React.Fragment, null, __jsx(Layout, {\n    className: \"infoform-layout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, __jsx(Content, {\n    className: \"content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"site-layout-background\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \" Fill The Form \"), errrors, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  }), __jsx(Form, {\n    onFinish: handleFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, __jsx(Row, {\n    className: \"info1stform-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, __jsx(Select, {\n    defaultValue: \"Current Location\",\n    size: \"large\",\n    onChange: handleSelect,\n    className: \"infoform-select\",\n    id: \"location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 37\n    }\n  }, __jsx(Option, {\n    value: \"Islamabad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 41\n    }\n  }, \"Islamabad\"), __jsx(Option, {\n    value: \"Lahore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 41\n    }\n  }, \"Lahore\")))), __jsx(Row, {\n    className: \"info1stform-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 33\n    }\n  }, __jsx(Select, {\n    defaultValue: \"Interest\",\n    size: \"large\",\n    onChange: handleSelect,\n    className: \"infoform-select\",\n    id: \"interest\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 37\n    }\n  }, __jsx(Option, {\n    value: \"Islamabad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 41\n    }\n  }, \"Islamabad\"), __jsx(Option, {\n    value: \"Lahore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 41\n    }\n  }, \"Lahore\")))), __jsx(Row, {\n    className: \"info1stform-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 33\n    }\n  }, __jsx(Select, {\n    defaultValue: \"Genre\",\n    size: \"large\",\n    onChange: handleSelect,\n    className: \"infoform-select\",\n    id: \"genre\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 37\n    }\n  }, __jsx(Option, {\n    value: \"Islamabad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 41\n    }\n  }, \"Islamabad\"), __jsx(Option, {\n    value: \"Lahore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 41\n    }\n  }, \"Lahore\")))), __jsx(Row, {\n    className: \"info1stform-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 33\n    }\n  }, __jsx(Select, {\n    defaultValue: \"No of Person\",\n    size: \"large\",\n    onChange: handleSelect,\n    className: \"infoform-select\",\n    id: \"person\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 37\n    }\n  }, __jsx(Option, {\n    value: \"Islamabad\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 41\n    }\n  }, \"Islamabad\"), __jsx(Option, {\n    value: \"Lahore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 41\n    }\n  }, \"Lahore\"), __jsx(Option, {\n    value: \"Lahore\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 41\n    }\n  }, \"Lahore\")))), __jsx(Row, {\n    className: \"info1stform-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, __jsx(Col, {\n    span: 24,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 33\n    }\n  }, __jsx(DatePicker, {\n    onChange: handleDate,\n    size: \"large\",\n    className: \"infoform-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 37\n    }\n  }))))))), personForm, __jsx(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(Infoform, \"vTdxizAObnARGzhQj4mJM0uZUkU=\");\n\n_c = Infoform;\nexport default Infoform;\n\nvar _c;\n\n$RefreshReg$(_c, \"Infoform\");","map":{"version":3,"sources":["C:/Users/Samee/Desktop/Portfolio/react-reserve-master/pages/infoform.js"],"names":["React","useState","Form","Divider","Select","Layout","Alert","DatePicker","Row","Col","axios","catchErrors","baseUrl","handleLogin","PersonForm","Content","Option","GENRAL_DATA","location","interest","genre","person","INITIAL_PERSON","name","phone","address","cnic","Infoform","data","setData","error","setError","personList","setPersonList","getpersondata","previousdata","updateddata","push","console","log","handleDate","date","dateString","handleSelect","event","target","id","value","handleFinish","url","payload","user","post","response","errrors","length","personForm","map","index"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Form, Divider, Select, Layout, Alert, DatePicker, Row, Col } from 'antd';\r\nimport axios from \"axios\";\r\nimport catchErrors from \"../utils/catchErrors\";\r\nimport baseUrl from \"../utils/baseUrl\";\r\nimport { handleLogin } from \"../utils/auth\";\r\nimport PersonForm from '../components/Form/PersonForm'\r\n\r\nconst { Content } = Layout;\r\nconst { Option } = Select;\r\n\r\nconst GENRAL_DATA = {\r\n    location: \"\",\r\n    interest: \"\",\r\n    genre: \"\",\r\n    person: \"\"\r\n};\r\n\r\nconst INITIAL_PERSON = {\r\n    name: \"\",\r\n    phone: \"\",\r\n    address: \"\",\r\n    cnic: \"\"\r\n};\r\n\r\nfunction Infoform() {\r\n\r\n    const [data, setData] = useState(GENRAL_DATA);\r\n    const [error, setError] = useState(\"\");\r\n   // because two person are mandatory\r\n    const [personList, setPersonList] = useState([INITIAL_PERSON, INITIAL_PERSON]);\r\n    \r\n    function getpersondata(person) {\r\n        let previousdata = [{ ...personList }];\r\n        let updateddata = previousdata.push(person);\r\n        setPersonList(updateddata);\r\n        console.log(person);\r\n    }\r\n\r\n    \r\n    function handleDate(date, dateString) {\r\n        console.log(date, dateString);\r\n    }\r\n\r\n    function handleSelect(event) {\r\n        const { id, value } = event.target;\r\n        setData({ ...data, [name]: value });\r\n    }\r\n\r\n    async function handleFinish() {\r\n        try {\r\n            const url = `${baseUrl}/api/`;\r\n            const payload = { ...user };\r\n            const response = await axios.post(url, payload);\r\n            console.log(response);\r\n            handleLogin(response.data);\r\n        } catch (error) {\r\n            catchErrors(error, setError);\r\n        }\r\n    }\r\n\r\n    let errrors = null;\r\n    if (error.length > 0) {\r\n        errrors = <Alert message={error} type=\"error\" showIcon />\r\n    }\r\n\r\n\r\n    let personForm = null;\r\n\r\n    personForm = personList.map((person, index) => {\r\n        return <PersonForm Number={index} list={personList} key={index}  getData={getpersondata(person)}/>\r\n    });\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n            <Layout className=\"infoform-layout\">\r\n                <Content className=\"content\" >\r\n                    <div className=\"site-layout-background\">\r\n                        <h1> Fill The Form </h1>\r\n                        {errrors}\r\n\r\n                        <Divider />\r\n                        <Form onFinish={handleFinish} >\r\n\r\n                            <Row className=\"info1stform-row\">\r\n                                <Col span={24} >\r\n                                    {/* <label className=\"label\">Current Location</label> */}\r\n                                    <Select defaultValue=\"Current Location\" size=\"large\" onChange={handleSelect} className=\"infoform-select\" id=\"location\">\r\n                                        <Option value=\"Islamabad\">Islamabad</Option>\r\n                                        <Option value=\"Lahore\">Lahore</Option>\r\n                                    </Select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"info1stform-row\">\r\n                                <Col span={24}>\r\n                                    {/* <label className=\"label\">Interest</label> */}\r\n                                    <Select defaultValue=\"Interest\" size=\"large\" onChange={handleSelect} className=\"infoform-select\" id=\"interest\">\r\n                                        <Option value=\"Islamabad\">Islamabad</Option>\r\n                                        <Option value=\"Lahore\">Lahore</Option>\r\n                                    </Select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"info1stform-row\">\r\n                                <Col span={24}>\r\n                                    {/* <label className=\"label\">Genre</label> */}\r\n                                    <Select defaultValue=\"Genre\" size=\"large\" onChange={handleSelect} className=\"infoform-select\" id=\"genre\">\r\n                                        <Option value=\"Islamabad\">Islamabad</Option>\r\n                                        <Option value=\"Lahore\">Lahore</Option>\r\n                                    </Select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"info1stform-row\">\r\n                                <Col span={24}>\r\n                                    {/* <label className=\"label\">Number of Person</label> */}\r\n                                    <Select defaultValue=\"No of Person\" size=\"large\" onChange={handleSelect} className=\"infoform-select\" id=\"person\">\r\n                                        <Option value=\"Islamabad\">Islamabad</Option>\r\n                                        <Option value=\"Lahore\">Lahore</Option>\r\n                                        <Option value=\"Lahore\">Lahore</Option>\r\n                                    </Select>\r\n                                </Col>\r\n                            </Row>\r\n\r\n\r\n                            <Row className=\"info1stform-row\">\r\n                                <Col span={24}>\r\n                                    {/* <label className=\"label\">Date</label> */}\r\n                                    <DatePicker onChange={handleDate} size=\"large\" className=\"infoform-select\" />\r\n                                </Col>\r\n                            </Row>\r\n\r\n                        </Form>\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n\r\n            {personForm}\r\n\r\n            <Divider />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Infoform;\r\n"]},"metadata":{},"sourceType":"module"}